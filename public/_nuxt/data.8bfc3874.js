import{a8 as o,Q as p,a9 as a,U as i}from"./entry.69edd33e.js";import{S as n}from"./sweetalert2.all.7ef268f0.js";const r=o("auth",{state:()=>({user:{name:"",email:"",jwt:"",role:0,id:"",fullname:"",username:"",rolename:"",company:"",companyid:0,companylogo:"",auth_token:"",ipaddress:""}}),actions:{async setUser(t){const{signOut:e}=p();this.user=t,await a.get(`${i().public.API_BASE_URL}/users`,{headers:{Authorization:`Bearer ${this.user.jwt}`,"Content-Type":"application/json"}}).then(s=>{this.user.fullname=s.data.data.fullname,this.user.role=s.data.data.role,this.user.company=s.data.data.company}).catch(s=>{s.response.status=="403"&&e()})},logOutUser(){},async setUserData(){}},getters:{getUser(t){return t.user}},persist:!0}),l=o("data",{state:()=>({responseStatus:{},isCollapse:!1,checkdevices:!1,data:{alarms:[],chartPoll:!1,clients:[],devices:[],dashboard:{chart:{daily:[],monthly:[]},alarmhistory:[]},monitoring:{realtime:{},tables:[]},monitoring_min:{},parameters:[],plan:[],production:[],report:{room:[],chart:[],table:[],alarm:[],audit:[]},searched:!1,setting:[],stopPoll:!1,users:[],updated:!1,inserted:!1,workorder:[],auditTrails:[],receipt:[],userProfile:{},settings:{}}}),actions:{async getParametersList(){const t=r();let e=await a.get(`${i().public.API_BASE_URL}/api/parameters/list`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}});this.$state.data.parameters=e.data},async updateParameter(t){const e=r();return await a.put(`${i().public.API_BASE_URL}/api/parameters`,t,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async getUserList(){const t=r();await a.get(`${i().public.API_BASE_URL}/users/list`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{this.$state.data.users=e.data}).catch(e=>{console.log(e)})},async createUser(t){const e=r();return await a.post(`${i().public.API_BASE_URL}/users/add`,{fullname:t.fullname,username:t.username,role:t.role,password:t.password},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async updateUser(t){const e=r();return await a.put(`${i().public.API_BASE_URL}/users/edit/${t.userid}`,{fullname:t.fullname,username:t.username,role:t.role,password:t.password,status:t.status},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async deleteUser(t){const e=r();return await a.delete(`${i().public.API_BASE_URL}/users/${t}`,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async getDeviceList(){const t=r();let e=await a.get(`${i().public.API_BASE_URL}/api/devices/list`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}});this.$state.data.devices=e.data},async updateDevice(t){const e=r();return await a.put(`${i().public.API_BASE_URL}/api/devices`,t,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async checkDevice(){r(),await a.get("public/client.json").then(t=>{this.checkdevices=!0;let e={username:t.data.username,password:t.data.password};this.$state.data.users.push(e)})},async getDailyChart(){const t=r();try{let e=await a.get(`${i().public.API_BASE_URL}/api/dashboard/chart/daily`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}});this.$state.data.dashboard.chart.daily=e.data}catch(e){alert(e),console.log("error getDailyChart")}},async getReport(t){const e=r();await a.post(`${i().public.API_BASE_URL}/api/reports`,{roomid:t.roomid,parameter:t.parameter,start:t.start,end:t.end,alarm:t.alarm,auditrail:t.auditrail,reporttable:t.reporttable},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}}).then(s=>{this.$state.data.report.chart=s.data.data.chart,this.$state.data.report.table=s.data.data.table,this.$state.data.report.alarm=s.data.data.alarm,this.$state.data.report.audit=s.data.data.audit,n.fire({title:"Success!",text:"Report create Success",icon:"Success"})}).catch(s=>{n.fire({title:"Error!",text:"Error Create Report "+s,icon:"error"})})},async getReportRoom(t){const e=r();let s=await a.get(`${i().public.API_BASE_URL}/api/reports/room/${t}`,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}});this.$state.data.report.room=s.data.data},async postAuditTrail(t){const e=r();await a.post(`${i().public.API_BASE_URL}/api/audittrail`,{access:t.access,action:t.action,description:t.description},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}}).catch(s=>{n.fire({title:"Error!",text:"Error while insert audit trails",icon:"error"})})},async getAuditTrail(){const t=r();await a.get(`${i().public.API_BASE_URL}/api/audittrail`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{this.$state.data.auditTrails=e.data}).catch(e=>{n.fire({title:"Error!",text:"Error while get audit trails",icon:"error"})})},async getAlarmHistory(){const t=r();await a.get(`${i().public.API_BASE_URL}/api/alarms`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{this.$state.data.alarms=e.data}).catch(e=>{n.fire({title:"Error!",text:"Error while get alarm history",icon:"error"})})},async getMonitoring(){const t=r();await a.get(`${i().public.API_BASE_URL}/api/mon`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{e.data&&(this.$state.data.monitoring=e.data)}).catch(e=>{n.fire({title:"Error!",text:"Error while get monitoring",icon:"error"})})},async getMonitoringMin(t){const e=r();await a.get(`${i().public.API_BASE_URL}/api/mon/minutes/${t.Type}/${t.id}`,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}}).then(s=>{this.$state.data.monitoring_min=s.data}).catch(s=>{n.fire({title:"Error!",text:"Error while get monitoring",icon:"error"})})},async getReceipt(){const t=r();await a.get(`${i().public.API_BASE_URL}/api/receipt/list`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{this.$state.data.receipt=e.data}).catch(e=>{n.fire({title:"Error!",text:"Error while get receipt : "+e,icon:"error"})})},async postReceipt(t){const e=r();return await a.post(`${i().public.API_BASE_URL}/api/receipt`,{notification_type:t.notification_type,receipt:t.receipt,receiptname:t.receiptname,active:t.active},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async updateReceipt(t){const e=r();return await a.put(`${i().public.API_BASE_URL}/api/receipt`,{notification_type:t.notification_type,receipt:t.receipt,receiptname:t.receiptname,active:t.active,idreceipt:t.idreceipt},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async deleteReceipt(t){const e=r();return await a.delete(`${i().public.API_BASE_URL}/api/receipt/${t}`,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async deleteAlarm(t){const e=r();return await a.delete(`${i().public.API_BASE_URL}/api/alarms/${t}`,{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}})},async editSettings(t){const e=r();await a.put(`${i().public.API_BASE_URL}/api/settings`,{system_name:t.system_name,supervisor_name:t.supervisor_name,supervisor_signature:t.supervisor_signature,supervisor_comment:t.supervisor_comment,smpt_server:t.smpt_server,smpt_port:t.smpt_port,auto_generate_report:t.auto_generate_report,location:t.location},{headers:{Authorization:`Bearer ${e.getUser.jwt}`,"Content-Type":"application/json"}}).then(s=>{n.fire({title:"Success!",text:"Setting Update Success ",icon:"Success"})}).catch(s=>{n.fire({title:"Error!",text:"Error Update Setting "+s,icon:"error"})})},async getUserProfile(){const t=r();await a.get(`${i().public.API_BASE_URL}/users`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{this.$state.data.userProfile=e.data}).catch(e=>{n.fire({title:"Error!",text:"Error while get user profile : "+e,icon:"error"})})},async changePassword(t,e,s){const c=r();return await a.put(`${i().public.API_BASE_URL}/users`,{new_password:e,current_password:t,id:s},{headers:{Authorization:`Bearer ${c.getUser.jwt}`,"Content-Type":"application/json"}})},async getSettings(){const t=r();await a.get(`${i().public.API_BASE_URL}/api/settings`,{headers:{Authorization:`Bearer ${t.getUser.jwt}`,"Content-Type":"application/json"}}).then(e=>{this.$state.data.settings=e.data}).catch(e=>{n.fire({title:"Error!",text:"Error while get user profile : "+e,icon:"error"})})}}});export{r as a,l as u};
